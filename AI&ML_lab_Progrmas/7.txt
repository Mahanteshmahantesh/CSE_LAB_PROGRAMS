import numpy as np
from sklearn.cluster import KMeans
from sklearn import datasets
import sklearn.metrics as sm
import matplotlib.pyplot as plt
import pandas as pd
# %matplotlib inline
iris=datasets.load_iris()
X=pd.DataFrame(iris.data)
X.columns=['Sepal_length','Sepal_Width','Petal_length','Petal_Width']

y=pd.DataFrame(iris.target)
y.columns=['Targets']

# set the size of plot
#plt.figure(figsize=(14,7))

# create a colormap
colormap=np.array(['red','lime','black'])

# plot sepal
plt.subplot(1,2,1)
plt.scatter(X.Sepal_length,X.Sepal_Width,c=colormap[y.Targets])
plt.title('Sepal')

# plot Petal
plt.subplot(1,2,2)
plt.scatter(X.Petal_length,X.Petal_Width,c=colormap[y.Targets],s=40)
plt.title('Petal')

# KMeans cluster
model=KMeans(n_clusters=3)
model.fit(X)
# this is what kmeans thougth
model.labels_

# view the results
# set the size of plot
plt.figure(figsize=(14,7))

# create a colormap
colormap=np.array(['red','lime','black'])

# plot the original classification
plt.subplot(1,2,1)
plt.scatter(X.Petal_length,X.Petal_Width,c=colormap[y.Targets],s=40)
plt.title('Real classification')

# plot model classification
plt.subplot(1,2,2)
plt.scatter(X.Petal_length,X.Petal_Width,c=colormap[y.Targets],s=40)
plt.title('K Mean classification')

# the file we convert all 1's to 0's and 0's to 1's
predY=np.choose(model.labels_,[0,1,2]).astype(np.int64)
print(predY)

# view results
# set the size of plot
plt.figure(figsize=(14,7))
# create colormap
colormap=np.array(['red','lime','black'])

# plot the origial
plt.subplot(1,2,1)
plt.scatter(X.Petal_length,X.Petal_Width,c=colormap[y.Targets],s=40)
plt.title('Real classification')

# plot model classification
plt.subplot(1,2,2)
plt.scatter(X.Petal_length,X.Petal_Width,c=colormap[y.Targets],s=40)
plt.title('Real classification')

# accuracy
sm.accuracy_score(y,model.labels_)

# confusion matrix
sm.confusion_matrix(y,model.labels_)